/*
*	@author Robin Zon <xzonro00@vutbr.cz>
*	@uses JUCE
*/

#include "RzKnob.h"


// Create new knob
RzKnob::RzKnob (RzAudioParameterFloat& parameter) : parameter(parameter)
{
    this->setSliderStyle (Slider::RotaryVerticalDrag);
	this->setTextBoxStyle (Slider::TextBoxRight, false, 70, 20);
	this->setRotaryParameters(-2.3f, 2.3f, true);
	this->setPopupDisplayEnabled(false, this);
	this->setScrollWheelEnabled(true);
	this->setMouseDragSensitivity(160); 
	this->setColour(Slider::textBoxBackgroundColourId, Colour((uint8)1, (uint8)1, (uint8)1,0.0f));
	this->setColour(Slider::textBoxOutlineColourId, Colour((uint8)1, (uint8)1, (uint8)1, 0.0f));
	this->setColour(Slider::textBoxTextColourId, Colour(240, 240, 240));
	this->setColour(Slider::textBoxHighlightColourId, Colour(220, 220, 220));
	this->setValue((float)parameter, NotificationType::dontSendNotification);
	
	startTimerHz(30);
	updateSliderPos();

    cachedImage_knobfull_png_1 = ImageCache::getFromMemory (knobfull_png, knobfull_pngSize);
	this->knob_indicator.addLineSegment(Line<float>(3, 3, 10, 10), 2);
}


// Destructor
RzKnob::~RzKnob()
{

}


// On timer callback
void RzKnob::timerCallback()
{
	updateSliderPos(); 
}


// Set parameter on value change
void RzKnob::valueChanged()
{
	this->parameter = (float)this->getValue();
}


// On drag start event
void RzKnob::startedDragging()
{ 
	parameter.beginChangeGesture(); 
}


// On drag end event
void RzKnob::stoppedDragging()
{
	parameter.endChangeGesture(); 
}


// Update slider position by parameter value
void RzKnob::updateSliderPos()
{
	const float newValue = (float)parameter;

	if (newValue != (float)this->getValue() && !isMouseButtonDown())
	{
		this->setValue(newValue, NotificationType::dontSendNotification);
	}
		
}


// Paint the knob
void RzKnob::paint (Graphics& g)
{
	g.drawImage(cachedImage_knobfull_png_1,
		0, 0, 116, 47,
		0, 0, cachedImage_knobfull_png_1.getWidth(), cachedImage_knobfull_png_1.getHeight());

	const float ratio = (float)((this->getValue() - this->getMinimum()) / (this->getMaximum() - this->getMinimum()));
	const float radians = (float)(2 * 3.141525635 * ((ratio * 270 - 270) / 360));

	g.setColour(Colour(82, 192, 56));
	g.fillPath(this->knob_indicator, AffineTransform::rotation(radians).translated(24, 23));
}


static const unsigned char resource_RzKnob_knobfull_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,116,0,0,0,47,8,6,0,0,0,50,211,238,19,0,0,0,9,112,72,89,115,0,0,11,19,0,0,11,19,1,0,154,
156,24,0,0,0,32,99,72,82,77,0,0,122,37,0,0,128,131,0,0,249,255,0,0,128,233,0,0,117,48,0,0,234,96,0,0,58,152,0,0,23,111,146,95,197,70,0,0,8,128,73,68,65,84,120,218,236,156,239,111,28,71,25,199,63,51,179,
123,63,124,103,231,98,39,196,118,130,165,64,29,74,170,18,34,210,54,136,82,165,81,165,188,40,164,42,13,72,72,237,11,84,137,34,241,51,125,131,136,248,7,80,81,66,137,80,1,245,13,175,34,129,8,42,45,21,82,
149,38,45,149,72,19,171,161,64,81,67,148,52,13,196,174,113,146,58,254,121,190,219,153,225,197,237,238,237,238,237,217,103,59,77,164,118,31,105,180,123,251,99,246,209,124,238,251,204,51,51,123,39,172,181,
100,246,225,49,153,53,193,135,203,156,232,135,71,94,249,252,74,235,41,1,247,3,247,2,59,128,45,64,31,208,5,204,1,87,129,127,3,35,133,209,190,241,202,153,79,124,86,214,157,47,0,27,129,66,134,97,217,86,5,
46,3,175,0,191,60,124,232,224,233,224,132,136,134,220,21,0,221,11,28,0,238,89,238,141,185,247,203,148,207,110,162,240,222,218,12,207,234,237,89,224,219,135,15,29,172,173,20,232,195,192,83,192,39,87,235,
137,154,45,208,243,207,33,138,99,125,25,150,213,217,81,96,223,114,129,222,5,60,3,124,46,118,212,8,114,227,101,220,241,50,234,106,1,121,61,7,11,18,234,2,163,52,198,245,208,61,11,232,190,42,222,192,44,102,
176,10,50,158,140,185,147,37,214,252,109,51,238,251,101,132,16,25,158,149,217,215,151,3,116,31,240,187,88,70,53,239,82,124,123,29,249,119,214,34,171,14,214,90,130,250,140,49,225,214,90,139,49,166,89,10,
30,122,120,26,179,109,26,74,58,246,144,202,235,195,20,71,27,106,205,192,46,219,78,116,10,244,251,192,207,194,142,87,75,138,111,173,167,240,175,117,8,221,72,148,131,122,146,80,3,152,73,168,214,90,140,212,
152,237,83,136,29,179,224,52,253,232,126,115,136,210,249,1,132,16,25,212,229,217,188,211,193,69,223,139,194,84,215,243,148,255,242,113,212,100,35,57,181,52,65,44,5,51,56,31,124,214,117,131,253,107,9,243,
182,139,179,119,10,209,219,80,235,244,182,75,128,160,116,190,63,172,59,3,219,145,21,151,26,135,126,21,120,58,28,227,140,149,40,191,184,25,113,45,23,15,161,17,213,165,65,76,83,168,214,26,107,45,90,107,
204,132,164,250,155,110,244,197,230,247,107,122,219,187,204,15,94,137,213,155,217,234,38,22,118,0,191,13,149,57,214,69,215,75,155,160,38,90,26,55,10,178,37,172,70,0,38,247,99,80,171,150,217,35,5,188,139,
42,172,247,250,206,243,212,43,51,49,101,103,182,114,160,207,132,23,77,230,40,28,27,196,120,113,64,65,73,3,153,60,151,118,44,9,215,212,13,83,71,28,244,68,51,188,78,109,191,24,3,154,65,93,25,208,135,125,
133,130,22,228,142,245,195,130,72,85,97,178,36,161,5,159,61,207,75,189,174,165,204,25,38,143,8,172,215,112,196,235,157,163,58,112,53,131,185,74,160,79,133,253,230,153,10,246,138,106,171,200,36,144,197,
96,121,158,23,131,155,118,141,49,134,133,81,195,244,241,38,188,153,109,255,109,73,170,50,75,183,180,44,247,161,112,6,104,78,33,206,116,183,52,98,144,113,70,143,37,195,98,16,98,163,73,81,90,120,110,151,
92,93,63,102,40,221,227,160,122,192,148,107,84,7,174,81,24,235,141,101,187,89,230,219,25,208,31,133,13,118,166,140,169,89,64,47,89,81,114,72,146,4,25,5,154,132,219,46,161,154,60,1,125,123,27,46,206,127,
122,156,220,229,10,66,8,164,148,25,204,14,129,22,9,38,218,13,152,183,10,88,173,219,170,33,57,153,16,5,10,196,20,154,132,186,24,200,160,222,153,83,154,222,7,29,132,2,189,110,14,45,61,164,149,177,107,50,
176,139,3,125,32,132,245,159,28,102,22,64,119,12,179,221,84,95,26,200,40,224,118,125,163,158,177,84,207,25,138,183,55,186,250,250,250,41,212,120,35,236,90,107,51,152,29,0,189,55,216,49,239,186,104,173,
59,14,179,237,66,110,39,253,229,162,115,89,17,160,222,250,25,204,88,5,41,37,248,207,202,160,46,14,52,92,69,241,70,37,38,5,232,82,137,80,50,156,166,37,67,203,201,84,23,46,153,112,223,235,155,15,235,16,
66,160,124,31,50,168,237,129,126,42,108,188,9,27,246,159,201,16,155,220,182,155,246,91,174,26,211,172,62,17,249,2,245,212,90,134,47,25,204,197,129,246,69,251,47,235,247,111,73,168,65,210,147,76,130,210,
250,200,224,220,74,77,207,70,158,159,215,88,99,176,198,64,22,118,59,206,114,27,202,168,122,169,253,101,18,104,0,49,154,213,222,200,193,191,173,71,189,181,152,160,126,127,157,39,67,185,56,208,249,0,170,
145,26,91,143,247,153,201,112,151,182,44,118,163,77,184,145,15,158,8,85,105,45,217,140,81,7,64,175,2,155,130,240,230,205,183,95,180,190,17,225,180,19,83,165,136,6,171,254,24,180,225,84,44,122,100,97,55,
13,168,229,28,162,1,84,244,26,244,85,147,154,201,222,76,115,215,71,64,93,119,67,152,54,131,153,106,50,222,79,50,18,146,30,108,93,34,187,21,33,46,63,20,113,241,127,185,24,204,204,150,0,10,246,181,96,175,
112,155,184,101,16,163,86,184,173,233,162,24,203,131,16,89,34,212,41,208,153,203,213,227,97,67,14,75,84,249,214,54,157,42,11,138,91,34,46,142,22,27,48,35,80,179,112,187,8,208,151,30,123,115,6,203,41,0,
161,160,124,183,186,165,206,149,239,86,8,223,5,251,94,14,81,111,172,178,4,80,201,160,46,21,114,65,215,204,79,130,253,202,46,21,31,54,220,68,19,110,227,249,97,103,48,210,221,152,195,245,95,237,20,34,3,
217,17,208,231,246,156,250,35,150,11,0,170,71,80,217,237,220,18,199,42,187,29,84,143,191,144,62,169,16,23,187,26,107,161,1,80,178,190,116,73,160,95,57,177,211,2,182,62,167,15,132,13,251,128,67,174,255,
230,54,93,174,95,80,121,160,249,69,50,175,245,32,165,108,44,108,251,197,151,104,166,210,165,20,10,216,231,31,60,125,212,26,222,8,66,223,134,111,228,144,55,233,71,127,178,208,120,94,16,234,237,184,131,
120,167,132,82,170,9,53,12,187,25,204,142,128,2,118,225,90,237,187,225,224,126,131,96,195,227,185,48,65,249,192,250,77,5,27,30,207,225,110,104,130,50,47,87,80,170,1,50,10,85,250,48,51,168,75,3,5,176,47,
238,123,99,164,54,229,61,22,28,40,14,75,250,159,200,33,243,31,144,35,121,232,127,34,71,113,184,233,146,247,167,53,136,43,5,148,114,90,20,154,133,219,14,129,6,253,40,96,94,216,59,242,251,250,180,247,195,
16,234,22,201,224,254,60,185,129,27,219,144,185,1,193,224,254,124,108,204,233,29,239,70,156,47,227,56,14,202,113,80,142,66,250,80,179,112,187,2,133,250,69,63,255,229,145,95,44,76,214,15,68,19,150,141,
79,230,89,187,199,89,245,144,70,184,176,118,143,195,198,39,243,177,196,171,126,188,12,127,239,198,113,156,70,81,42,84,104,180,255,204,160,182,216,84,219,159,19,30,221,117,82,250,192,21,144,219,115,100,
251,215,74,3,249,103,99,99,214,41,203,228,113,205,204,105,141,158,233,124,138,80,149,5,229,187,20,149,251,85,56,52,9,97,190,176,6,113,190,132,235,58,56,142,139,227,186,184,62,88,233,131,205,128,182,181,
147,139,1,21,62,80,73,99,85,198,189,239,233,173,59,123,183,150,127,42,93,121,103,76,206,26,170,231,12,243,231,12,11,151,12,245,9,139,158,181,216,122,67,133,170,36,112,215,11,242,67,146,226,176,164,48,
44,91,18,44,51,238,160,143,245,32,175,20,155,202,116,221,166,66,29,167,37,203,205,172,197,30,93,244,7,191,17,168,42,128,10,228,119,255,250,206,135,122,54,119,253,88,186,98,104,181,30,216,73,133,247,106,
25,113,161,11,169,84,8,83,37,195,173,175,204,236,37,235,182,246,7,224,145,78,166,129,44,96,128,240,157,148,151,191,249,143,231,128,63,223,247,243,59,190,84,217,82,250,150,83,144,159,89,238,211,205,152,
139,62,93,66,92,40,162,148,66,229,100,35,155,141,64,84,9,152,25,200,182,22,252,11,138,93,242,39,249,190,74,147,225,215,1,114,126,201,247,222,209,93,185,253,209,193,47,150,54,21,118,228,215,184,91,85,65,
14,73,71,246,8,73,222,26,91,51,117,59,229,205,233,203,243,19,181,115,181,179,114,50,127,246,99,155,139,170,180,213,113,156,117,74,41,55,72,120,148,82,40,199,7,41,91,179,218,12,106,104,11,192,40,112,2,
248,213,225,67,7,95,15,19,205,78,254,99,33,5,106,52,4,187,62,216,232,54,128,174,34,247,132,226,244,139,246,85,239,1,117,160,150,216,214,253,115,58,114,143,245,135,85,81,223,90,252,253,206,15,246,127,100,
200,30,62,116,48,62,114,232,244,95,80,34,80,147,106,85,17,136,237,96,6,247,217,72,8,79,131,26,108,131,227,33,200,52,152,237,128,126,148,95,30,235,248,191,254,162,19,14,17,24,129,146,170,52,222,24,156,
3,102,129,153,72,153,78,41,209,243,179,254,125,243,126,61,245,8,212,182,202,204,44,221,150,181,54,22,52,234,209,93,39,77,68,113,198,255,98,104,191,200,132,50,131,109,50,201,138,126,57,76,18,224,98,170,
204,172,189,253,127,0,199,225,222,113,136,229,155,98,0,0,0,0,73,69,78,68,174,66,96,130,0,0};

const char* RzKnob::knobfull_png = (const char*) resource_RzKnob_knobfull_png;
const int RzKnob::knobfull_pngSize = 2298;